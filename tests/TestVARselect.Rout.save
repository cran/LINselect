
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #source("charge.R")
> library("LINselect")
> 
> set.seed(15) # pour pouvoir comparer des exécutions sucessives
> ex <- simulData(p=25,n=25,r=0.5,rSN=10)
> 
> resVARselect <- VARselect(ex$Y,ex$X,exhaustive.dmax=4)
[1] "LASSO PROCEDURE with option max.steps= 25 dmax= 18"
Loading required package: lars
Loaded lars 1.2

[1] "ELASTIC-NET PROEDURE with options max.steps= 25 dmax= 18 en.lambda= 0.01 0.1 0.5 1 2 5"
[1] "RIDGE PROCEDURE with options dmax= 18 ridge.lambda= 0.01 0.1 0.5 1 2 5"
[1] "RANDOMFOREST PROCEDURE with option dmax= 18 rF.lmtry= 2"
randomForest 4.6-7
Type rfNews() to see new features/changes/bug fixes.
[1] "PLS PROCEDURE with options dmax= 18 pls.ncomp= 1 2 3 4 5"

Attaching package: 'pls'

The following object is masked from 'package:stats':

    loadings

[1] "ADAPTIVE LASSO with WEIGHTS based on the RIDGE PROCEDURE"
[1] "with options max.steps= 25 dmax= 18 ALridge.lambda= 0.01 0.1 0.5 1 2 5"
[1] "ADAPTIVE LASSO  with WEIGHTS based on the PLS PROCEDURE"
[1] "with options max.steps= 25 dmax= 18 pls.ncomp= 1 2 3 4 5"
[1] "EXHAUSTIVE PROCEDURE"
[1] "dmax, the maximum number of selected variates equals 4"
[1] "selection of the best 1 variates"
[1] "the number of subsets of 1 variates among 25 equals 25"
[1] "selection of the best 2 variates"
[1] "the number of subsets of 2 variates among 25 equals 300"
[1] "selection of the best 3 variates"
[1] "the number of subsets of 3 variates among 25 equals 2300"
[1] "selection of the best 4 variates"
[1] "the number of subsets of 4 variates among 25 equals 12650"
> resVARselect$summary
$support
$support[[1]]
[1]  2  7 11 18


$crit
[1] 2258.512

$method
[1] "exhaustive"

> 
> resVARselect <-
+   VARselect(ex$Y,ex$X,normalize=FALSE,dmax=15,exhaustive.dmax=4,verbose=FALSE) 
> resVARselect$summary
$support
$support[[1]]
[1]  2  7 11 18


$crit
[1] 2258.512

$method
[1] "exhaustive"

> 
> X <- ex$X
> X[,1] <- X[,1]/10
> X[,2] <- X[,3]*10
> resVARselect <- VARselect(ex$Y,X,dmax=20,exhaustive.dmax=2,verbose=FALSE)
> resVARselect$summary
$support
$support[[1]]
[1]  1  3  4  7  9 11 12 18


$crit
[1] 2332.005

$method
[1] "ALridge"

> 
> resVARselect <- VARselect(ex$Y,X,normalize=FALSE,dmax=20,exhaustive.dmax=2,verbose=FALSE)
> resVARselect$summary
$support
$support[[1]]
[1] 1 5


$crit
[1] 2677.155

$method
[1] "exhaustive"

> 
> resVARselect <- VARselect(ex$Y,ex$X,method="exhaustive",exhaustive.maxdim=5000)
[1] "EXHAUSTIVE PROCEDURE"
[1] "dmax, the maximum number of selected variates equals 3"
[1] "to increase dmax, choose a larger value for the parameter exhaustive.maxdim"
[1] "selection of the best 1 variates"
[1] "the number of subsets of 1 variates among 25 equals 25"
[1] "selection of the best 2 variates"
[1] "the number of subsets of 2 variates among 25 equals 300"
[1] "selection of the best 3 variates"
[1] "the number of subsets of 3 variates among 25 equals 2300"
> resVARselect$summary
$support
$support[[1]]
[1] 1 2 5


$crit
[1] 2593.56

$method
[1] "exhaustive"

> 
> resVARselect <- VARselect(ex$Y,ex$X,method="en",en.lambda=5,dmax=20)
[1] "ELASTIC-NET PROEDURE with options max.steps= 25 dmax= 18 en.lambda= 5"
> resVARselect$summary
$support
$support[[1]]
[1] 2 7


$crit
[1] 3200.355

$method
[1] "en"

> 
> set.seed(15)
> ex <- simulData(p=100,n=100,r=0.5,rSN=10)
> 
> methodF=c("lasso","ridge","pls","en","ALridge","ALpls","rF")
> resVARselect <- VARselect(ex$Y,ex$X,method=methodF)
[1] "LASSO PROCEDURE with option max.steps= 100 dmax= 75"
[1] "ELASTIC-NET PROEDURE with options max.steps= 100 dmax= 75 en.lambda= 0.01 0.1 0.5 1 2 5"
[1] "RIDGE PROCEDURE with options dmax= 75 ridge.lambda= 0.01 0.1 0.5 1 2 5"
[1] "RANDOMFOREST PROCEDURE with option dmax= 75 rF.lmtry= 2"
[1] "PLS PROCEDURE with options dmax= 75 pls.ncomp= 1 2 3 4 5"
[1] "ADAPTIVE LASSO with WEIGHTS based on the RIDGE PROCEDURE"
[1] "with options max.steps= 100 dmax= 75 ALridge.lambda= 0.01 0.1 0.5 1 2 5"
[1] "ADAPTIVE LASSO  with WEIGHTS based on the PLS PROCEDURE"
[1] "with options max.steps= 100 dmax= 75 pls.ncomp= 1 2 3 4 5"
> resVARselect$summary
$support
$support[[1]]
 [1]  1  2  3  4  5  6  8  9 10 11 20


$crit
[1] 3719.822

$method
[1] "ALridge"

> 
> resVARselect <- VARselect(ex$Y,ex$X,method="rF",rF.lmtry=c(1,2,5))
[1] "RANDOMFOREST PROCEDURE with option dmax= 75 rF.lmtry= 1 RANDOMFOREST PROCEDURE with option dmax= 75 rF.lmtry= 2 RANDOMFOREST PROCEDURE with option dmax= 75 rF.lmtry= 5"
> resVARselect
$pen.crit
           0            1            2            3            4            5 
     0.00000     14.16405     29.33724     44.90067     60.99392     77.73244 
           6            7            8            9           10           11 
    95.20893    113.50328    132.68943    152.83829    174.02063    196.30832 
          12           13           14           15           16           17 
   219.77543    244.49918    270.56060    298.04520    327.04362    357.65215 
          18           19           20           21           22           23 
   400.63771    435.49793    472.31715    511.22147    552.34610    595.83623 
          24           25           26           27           28           29 
   641.84800    690.54951    742.12198    796.76105    854.67812    916.10199 
          30           31           32           33           34           35 
   981.28051   1050.48258   1124.00026   1202.15123   1285.28145   1373.76827 
          36           37           38           39           40           41 
  1468.02378   1568.49874   1675.68690   1790.13000   1912.42333   2043.22217 
          42           43           44           45           46           47 
  2183.24905   2333.30211   2494.26461   2667.11595   2852.94428   3052.96115 
          48           49           50           51           52           53 
  3268.51846   3501.12789   3752.48429   4027.87089   4334.11015   4675.94138 
          54           55           56           57           58           59 
  5059.02184   5490.14225   5977.50183   6531.06227   7163.00656   7888.33910 
          60           61           62           63           64           65 
  8725.67721   9698.30518  10835.59201  12174.91868  13764.32808  15666.21328 
          66           67           68           69           70           71 
 17962.51827  20762.17483  24211.89870  28512.11931  33940.90230  40890.56631 
          72           73           74           75 
 49924.91002  61870.70073  77967.62025 100120.83184 

$rF
$rF$support
 [1]  3  7  1  5  4  2  8  6  9 11 10

$rF$crit
[1] 4176.308

$rF$fitted
  [1]  10.7586154  -1.5835802   4.4919927  -0.8106270  -4.5966440 -17.8732864
  [7]   4.2532058  20.7719663   3.0128827 -32.6534632  -3.1826466  -3.4124989
 [13]  -4.4573119   4.7261833  12.2636936 -16.1257657   6.8007254  19.1779520
 [19]  -5.3121011   6.2483702  -1.4120747 -24.9220946 -14.2425937  16.8809569
 [25]   4.2140472 -10.3324143   5.8567811 -19.0462925   7.0712896   7.2821489
 [31]   1.8502161  -4.1577584   5.8464319  15.2269116   3.6638755  -3.3806148
 [37]  -2.0730659 -22.2015775  -2.3542809   1.6056025   3.7108376 -31.1151621
 [43]  -5.0385823  -1.7090634  -2.7882671  -2.0758181  -5.8145597  14.8657187
 [49]  -4.8360116  -3.7318800   0.3412305  -6.2265918  15.1249060  -0.3018207
 [55]  -7.9344283 -38.6521828   6.4836678  15.7291539 -10.3666932 -16.2206725
 [61]  19.1578492   7.5580591  -0.2256721   4.7932869 -15.2365886  10.6245697
 [67]   4.7861116  -8.5548100   6.2367933  -5.6284297   5.2918010   1.4098238
 [73]  -2.7285575 -13.0668522 -11.3576334   8.2685783  10.3420876 -12.3146584
 [79]  13.2786256  -3.9936775  20.1327165   3.2598811 -19.0061159 -14.3084020
 [85]   3.8827348  -8.1005666  -3.5190733  16.9623603  11.5886122   2.5545928
 [91]  -4.0925669   4.1846359  -5.7198039   9.8014914 -18.8699828   7.3613761
 [97]  10.2465698  -9.2519442  -7.0747990   0.7962176


$summary
$summary$support
$summary$support[[1]]
 [1]  3  7  1  5  4  2  8  6  9 11 10


$summary$crit
[1] 4176.308

$summary$method
[1] "rF"


> 
> 
> set.seed(15) 
> ex <- simulData(p=100,n=50,r=0.95,rSN=10)
> 
> resVARselect <- VARselect(ex$Y,ex$X,method=methodF)
[1] "LASSO PROCEDURE with option max.steps= 50 dmax= 45"
[1] "ELASTIC-NET PROEDURE with options max.steps= 50 dmax= 45 en.lambda= 0.01 0.1 0.5 1 2 5"
[1] "RIDGE PROCEDURE with options dmax= 45 ridge.lambda= 0.01 0.1 0.5 1 2 5"
[1] "RANDOMFOREST PROCEDURE with option dmax= 45 rF.lmtry= 2"
[1] "PLS PROCEDURE with options dmax= 45 pls.ncomp= 1 2 3 4 5"
[1] "ADAPTIVE LASSO with WEIGHTS based on the RIDGE PROCEDURE"
[1] "with options max.steps= 50 dmax= 45 ALridge.lambda= 0.01 0.1 0.5 1 2 5"
[1] "ADAPTIVE LASSO  with WEIGHTS based on the PLS PROCEDURE"
[1] "with options max.steps= 50 dmax= 45 pls.ncomp= 1 2 3 4 5"
Warning message:
In penalty(Delta, n, p, K) :
  the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 0the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 1the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 2the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 3the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 4the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 5the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 6the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 7the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 8the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm= 9the values of the penalty function greater than 1e+08 are set to Inf 
 err= 2 n n= 50 Dm=  [... truncated]
> resVARselect$summary
$support
$support[[1]]
[1]  5 10


$crit
[1] 7400.683

$method
[1] "ALridge"

> 
> set.seed(15)
> ex <- simulData(p=1000,n=200,r=0.95,rSN=10)
> methodF=c("lasso","ridge","pls","en","ALridge","ALpls")
> resVARselect <- VARselect(ex$Y,ex$X,method=methodF,dmax=50,
+                       en.lambda=c(0.01,1,5),
+                       ridge.lambda=c(0.01,1,5),
+                       ALridge.lambda=c(0.01,1,5))
[1] "LASSO PROCEDURE with option max.steps= 200 dmax= 50"
[1] "ELASTIC-NET PROEDURE with options max.steps= 200 dmax= 50 en.lambda= 0.01 1 5"
[1] "RIDGE PROCEDURE with options dmax= 50 ridge.lambda= 0.01 1 5"
[1] "PLS PROCEDURE with options dmax= 50 pls.ncomp= 1 2 3 4 5"
[1] "ADAPTIVE LASSO with WEIGHTS based on the RIDGE PROCEDURE"
[1] "with options max.steps= 200 dmax= 50 ALridge.lambda= 0.01 1 5"
[1] "ADAPTIVE LASSO  with WEIGHTS based on the PLS PROCEDURE"
[1] "with options max.steps= 200 dmax= 50 pls.ncomp= 1 2 3 4 5"
> resVARselect$summary
$support
$support[[1]]
[1]  1  4  5  6 10


$crit
[1] 13815.59

$method
[1] "ALridge"

> 
> set.seed(15) 
> p <- 5000 
> n <- 100
> X <-  matrix(rnorm(n*p),ncol=p,nrow=n)
> Y <- rnorm(n)
> resVARselect <- VARselect(Y,X,method="ALpls",ALpls.ncomp=4,dmax=50)
[1] "ADAPTIVE LASSO  with WEIGHTS based on the PLS PROCEDURE"
[1] "with options max.steps= 100 dmax= 50 pls.ncomp= 1 2 3 4"
> resVARselect
$pen.crit
           0            1            2            3            4            5 
0.000000e+00 2.439197e+01 5.402073e+01 8.856075e+01 1.290211e+02 1.766173e+02 
           6            7            8            9           10           11 
2.327976e+02 3.039728e+02 3.837480e+02 4.785623e+02 5.915509e+02 7.265568e+02 
          12           13           14           15           16           17 
8.883086e+02 1.082647e+03 1.316810e+03 1.599808e+03 1.942890e+03 2.360167e+03 
          18           19           20           21           22           23 
2.869402e+03 3.493059e+03 4.259663e+03 5.205601e+03 6.377511e+03 7.835459e+03 
          24           25           26           27           28           29 
9.657194e+03 1.194389e+04 1.482791e+04 1.848344e+04 2.314102e+04 2.910771e+04 
          30           31           32           33           34           35 
3.679505e+04 4.675842e+04 5.975245e+04 7.681003e+04 9.935572e+04 1.293699e+05 
          36           37           38           39           40           41 
1.696286e+05 2.240568e+05 2.982550e+05 4.002904e+05 5.419000e+05 7.403388e+05 
          42           43           44           45           46           47 
1.021254e+06 1.423211e+06 2.004898e+06 2.856785e+06 4.120210e+06 6.019130e+06 
          48           49           50 
8.913767e+06 1.339272e+07 2.043399e+07 

$summary
$summary$support
$summary$support[[1]]
[1] "Intercept"


$summary$crit
[1] 131.3847

$summary$method
[1] "ALpls"


> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 79.414   0.162  79.786 
